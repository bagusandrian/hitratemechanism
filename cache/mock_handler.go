// Code generated by mockery v2.23.2. DO NOT EDIT.

package cache

import (
	context "context"

	model "github.com/bagusandrian/hitratemechanism/model"
	mock "github.com/stretchr/testify/mock"
)

// MockHandler is an autogenerated mock type for the Handler type
type MockHandler struct {
	mock.Mock
}

// CacheValidateTrend provides a mock function with given fields: ctx, req
func (_m *MockHandler) CacheValidateTrend(ctx context.Context, req model.RequestCheck) model.Response {
	ret := _m.Called(ctx, req)

	var r0 model.Response
	if rf, ok := ret.Get(0).(func(context.Context, model.RequestCheck) model.Response); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Get(0).(model.Response)
	}

	return r0
}

type mockConstructorTestingTNewMockHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockHandler creates a new instance of MockHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHandler(t mockConstructorTestingTNewMockHandler) *MockHandler {
	mock := &MockHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
